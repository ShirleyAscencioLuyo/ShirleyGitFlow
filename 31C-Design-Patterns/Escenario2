
class Subject {
  constructor() {
    this.observers = []; 
  }

  
  addObserver(observer) {
    this.observers.push(observer);
  }

  removeObserver(observer) {
    const index = this.observers.indexOf(observer);
    if (index !== -1) {
      this.observers.splice(index, 1);
    }
  }

  
  notify(data) {
    this.observers.forEach(observer => {
      observer.update(data);
    });
  }
}


class Observer {
  constructor(name) {
    this.name = name;
  }


  update(data) {
    console.log(`${this.name} ha recibido la actualizaci贸n: ${data}`);
  }
}

// Uso del patr贸n Observer
const subject = new Subject();

const observer1 = new Observer("Observador 1");
const observer2 = new Observer("Observador 2");

subject.addObserver(observer1);
subject.addObserver(observer2);

subject.notify("Nueva informaci贸n"); 

subject.removeObserver(observer1); 

subject.notify("Otra actualizaci贸n"); 